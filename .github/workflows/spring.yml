name: Spring CI

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      
#       - name: Cache dependency
#         uses: actions/cache@v2
#         with:
#           path: ~/.cache/pip
#           key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#           restore-keys: |
#             ${{ runner.os }}-pip-

#       - name: Create secrets
#         run: echo "${{ secrets.DOTENV }}" > server/.env

      - name: Set up Java JDK
        uses: actions/setup-java@v3.4.1
        with: 
          java-version: '8'
          distribution: temurin
          
      - name : make application-properties
        run : |
              echo "cloud.aws.credentials.access-key=$secrets.AWS_ACCESS_KEY" >> ./backend/hool/src/main/resources/application-API-KEY.properties
              echo "cloud.aws.credentials.secret-key=$secrets.AWS_SECRET_KEY" >> ./backend/hool/src/main/resources/application-API-KEY.properties
              echo "cloud.aws.s3.bucket=$secrets.AWS_BUCKET" >> ./backend/hool/src/main/resources/application-API-KEY.properties
              echo "cloud.aws.region.static=$secrets.AWS_REGION" >> ./backend/hool/src/main/resources/application-API-KEY.properties
              echo "cloud.aws.stack.auto=$secrets.AWS_STACK_AUTO" >> ./backend/hool/src/main/resources/application-API-KEY.properties
              cat ./backend/hool/src/main/resources/application-API-KEY.properties
      - name: Build
        run: |
            cd backend/hool/
            chmod +x gradlew
            ./gradlew build -x test

      - name: Dockerize
        run: |
          echo "${{ secrets.BACK_DOCKER_HUB_PW }}" | docker login -u "${{ secrets.BACK_DOCKER_HUB_USER }}" --password-stdin
          docker build -t "${{ secrets.BACK_IMAGE_NAME }}" ./backend/hool
          docker push "${{ secrets.BACK_IMAGE_NAME }}"
          docker logout
