# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Nodejs.gitlab-ci.yml

# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
stages:
  - react-test
  - spring-build
  - spring-package
  - dockerize
  - deploy

# cache:
#   paths:
#     - node_modules/

run react tests:
  image: node:16.16
  stage: react-test
  script: |
    cd frontend/
    npm install --force
    npm run test
  only:
    - master
    - develop

# spring-build:
#   image: openjdk:8
#   stage: spring-build
#   script: |
#     cd backend/hool/
#     chmod +x gradlew
#     ./gradlew build -x test
#   artifacts:
#     paths: 
#       - ./backend/hool/build/libs/*.jar
#     expire_in: 60 min
#   only:
#     - master
#     - develop
#     - feature/backend

spring-package:
  image: docker:latest
  stage: spring-package
  variables:
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:dind
  before_script: |
    cd backend/hool
    echo $DOCKER_HUB_PW_BACK | docker login -u $DOCKER_HUB_USER_BACK --password-stdin
  script: |
    docker build -t $IMAGE_NAME_BACK .
    docker push $IMAGE_NAME_BACK
  after_script: |
    docker logout
  only:
    - master
    - develop
    - feature/backend

# dockerize:
#   image: docker:latest
#   stage: dockerize
#   services:
#     - docker:dind
#   before_script: |
#      echo $DOCKER_HUB_PW | docker login -u $DOCKER_HUB_USER --password-stdin
#   script: |
#     docker build -t $IMAGE_NAME ./frontend/
#     docker push $IMAGE_NAME
#   after_script: |
#     docker logout
#   only:
#     - master
#     - develop

# deploy:
#   image: docker:latest
#   stage: deploy
#   variables:
#     DOCKER_TLS_CERTDIR: ""
#   services:
#     - docker:dind
#   tags:
#     - deployment
#   before_script: |
#     echo $DOCKER_HUB_PW | docker login -u $DOCKER_HUB_USER --password-stdin
#   script: |
#     cd /opt/openvidu/
#     ./openvidu stop
#     docker rm $FRONT_CON_NAME
#     docker rmi $IMAGE_NAME
#     ./openvidu start
#   after_script: |
#     docker logout
#   when: on_success
#   only:
#     - master
#     - develop
